/*
 * Visier Data and Job Handling APIs
 * Visier APIs for data and job handling
 *
 * The version of the OpenAPI document: 22222222.99201.1200
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AdpAuthParamsDTO;
import com.konfigthis.client.model.BambooAuthParamsDTO;
import com.konfigthis.client.model.BasicS3AuthParamsDTO;
import com.konfigthis.client.model.BigQueryAuthParamsDTO;
import com.konfigthis.client.model.CopyS3AuthParamsDTO;
import com.konfigthis.client.model.DayforceV2AuthParamsDTO;
import com.konfigthis.client.model.DimensionsAuthParamsDTO;
import com.konfigthis.client.model.FusionAuthParamsDTO;
import com.konfigthis.client.model.GongAuthParamsDTO;
import com.konfigthis.client.model.GoogleSheetsAuthParamsDTO;
import com.konfigthis.client.model.GoogleWorkspaceAuthParamsDTO;
import com.konfigthis.client.model.GreenhouseAuthParamsDTO;
import com.konfigthis.client.model.IcimsAuthParamsDTO;
import com.konfigthis.client.model.InternalS3AuthParamsDTO;
import com.konfigthis.client.model.JdbcAuthParamsDTO;
import com.konfigthis.client.model.JiraAuthParamsDTO;
import com.konfigthis.client.model.LeverAuthParamsDTO;
import com.konfigthis.client.model.MedalliaAuthParamsDTO;
import com.konfigthis.client.model.Microsoft365AuthParamsDTO;
import com.konfigthis.client.model.MySqlAuthParamsDTO;
import com.konfigthis.client.model.NamelyAuthParamsDTO;
import com.konfigthis.client.model.OracleDbAuthParamsDTO;
import com.konfigthis.client.model.QualtricsAuthParamsDTO;
import com.konfigthis.client.model.RedshiftAuthParamsDTO;
import com.konfigthis.client.model.SalesforceAuthParamsDTO;
import com.konfigthis.client.model.SalesforceV2AuthParamsDTO;
import com.konfigthis.client.model.ServiceNowAuthParamsDTO;
import com.konfigthis.client.model.SlackAuthParamsDTO;
import com.konfigthis.client.model.SnowflakeAuthParamsDTO;
import com.konfigthis.client.model.SqlServerAuthParamsDTO;
import com.konfigthis.client.model.SuccessFactorsAuthParamsDTO;
import com.konfigthis.client.model.UltimateAuthParamsDTO;
import com.konfigthis.client.model.WillowAuthParamsDTO;
import com.konfigthis.client.model.WorkdayAuthParamsDTO;
import com.konfigthis.client.model.WorkdayRaasAuthParamsDTO;
import com.konfigthis.client.model.ZoomAuthParamsDTO;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * DataProviderAuthParamsDTO
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class DataProviderAuthParamsDTO {
  public static final String SERIALIZED_NAME_TENANT_DOMAIN_NAME = "tenantDomainName";
  @SerializedName(SERIALIZED_NAME_TENANT_DOMAIN_NAME)
  private String tenantDomainName;

  /**
   * The data provider associated with the credential.  - Valid values: UKG, Dimensions, Workday, Redshift, BasicS3, CopyS3, SqlServer, Snowflake
   */
  @JsonAdapter(ProviderEnum.Adapter.class)
 public enum ProviderEnum {
    BAMBOO("Bamboo"),
    
    GOOGLESHEETS("GoogleSheets"),
    
    GREENHOUSE("Greenhouse"),
    
    JIRA("Jira"),
    
    LEVER("Lever"),
    
    NAMELY("Namely"),
    
    QUALTRICS("Qualtrics"),
    
    SALESFORCE("Salesforce"),
    
    UKG("UKG"),
    
    WORKDAY("Workday"),
    
    ICIMS("Icims"),
    
    SERVICENOW("ServiceNow"),
    
    JDBC("Jdbc"),
    
    BASICS3("BasicS3"),
    
    INTERNALS3("InternalS3"),
    
    COPYS3("CopyS3"),
    
    REDSHIFT("Redshift"),
    
    SNOWFLAKE("Snowflake"),
    
    BIGQUERY("BigQuery"),
    
    SQLSERVER("SqlServer"),
    
    DIMENSIONS("Dimensions"),
    
    ICIMSPARTNERPROVIDERREDSHIFT("IcimsPartnerProviderRedshift"),
    
    WILLOW("Willow"),
    
    SUCCESSFACTORS("SuccessFactors"),
    
    ICIMSV2("IcimsV2"),
    
    ADP("ADP"),
    
    WORKDAYV2("WorkdayV2"),
    
    SERVICENOWV2("ServiceNowV2"),
    
    MEDALLIA("Medallia"),
    
    FUSION("Fusion"),
    
    SALESFORCEV2("SalesforceV2"),
    
    GONG("Gong"),
    
    ZOOM("Zoom"),
    
    GOOGLECALENDAR("GoogleCalendar"),
    
    UKGV2("UKGV2"),
    
    DAYFORCEV2("DayforceV2"),
    
    GOOGLEACTIVITYREPORT("GoogleActivityReport"),
    
    SLACK("Slack"),
    
    MYSQL("MySql"),
    
    WORKDAYRAAS("WorkdayRaas"),
    
    MICROSOFT365("Microsoft365"),
    
    GOOGLEWORKSPACE("GoogleWorkspace"),
    
    ORACLEDB("OracleDb"),
    
    SMARTRECRUITERS("SmartRecruiters");

    private String value;

    ProviderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProviderEnum fromValue(String value) {
      for (ProviderEnum b : ProviderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProviderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProviderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProviderEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProviderEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PROVIDER = "provider";
  @SerializedName(SERIALIZED_NAME_PROVIDER)
  private ProviderEnum provider;

  public static final String SERIALIZED_NAME_BAMBOO_AUTH_PARAMS = "bambooAuthParams";
  @SerializedName(SERIALIZED_NAME_BAMBOO_AUTH_PARAMS)
  private BambooAuthParamsDTO bambooAuthParams;

  public static final String SERIALIZED_NAME_GREENHOUSE_AUTH_PARAMS = "greenhouseAuthParams";
  @SerializedName(SERIALIZED_NAME_GREENHOUSE_AUTH_PARAMS)
  private GreenhouseAuthParamsDTO greenhouseAuthParams;

  public static final String SERIALIZED_NAME_GOOGLE_SHEETS_AUTH_PARAMS = "googleSheetsAuthParams";
  @SerializedName(SERIALIZED_NAME_GOOGLE_SHEETS_AUTH_PARAMS)
  private GoogleSheetsAuthParamsDTO googleSheetsAuthParams;

  public static final String SERIALIZED_NAME_JIRA_AUTH_PARAMS = "jiraAuthParams";
  @SerializedName(SERIALIZED_NAME_JIRA_AUTH_PARAMS)
  private JiraAuthParamsDTO jiraAuthParams;

  public static final String SERIALIZED_NAME_LEVER_AUTH_PARAMS = "leverAuthParams";
  @SerializedName(SERIALIZED_NAME_LEVER_AUTH_PARAMS)
  private LeverAuthParamsDTO leverAuthParams;

  public static final String SERIALIZED_NAME_NAMELY_AUTH_PARAMS = "namelyAuthParams";
  @SerializedName(SERIALIZED_NAME_NAMELY_AUTH_PARAMS)
  private NamelyAuthParamsDTO namelyAuthParams;

  public static final String SERIALIZED_NAME_QUALTRICS_AUTH_PARAMS = "qualtricsAuthParams";
  @SerializedName(SERIALIZED_NAME_QUALTRICS_AUTH_PARAMS)
  private QualtricsAuthParamsDTO qualtricsAuthParams;

  public static final String SERIALIZED_NAME_SALESFORCE_AUTH_PARAMS = "salesforceAuthParams";
  @SerializedName(SERIALIZED_NAME_SALESFORCE_AUTH_PARAMS)
  private SalesforceAuthParamsDTO salesforceAuthParams;

  public static final String SERIALIZED_NAME_ULTIMATE_AUTH_PARAMS = "ultimateAuthParams";
  @SerializedName(SERIALIZED_NAME_ULTIMATE_AUTH_PARAMS)
  private UltimateAuthParamsDTO ultimateAuthParams;

  public static final String SERIALIZED_NAME_WORKDAY_AUTH_PARAMS = "workdayAuthParams";
  @SerializedName(SERIALIZED_NAME_WORKDAY_AUTH_PARAMS)
  private WorkdayAuthParamsDTO workdayAuthParams;

  public static final String SERIALIZED_NAME_ICIMS_AUTH_PARAMS = "icimsAuthParams";
  @SerializedName(SERIALIZED_NAME_ICIMS_AUTH_PARAMS)
  private IcimsAuthParamsDTO icimsAuthParams;

  public static final String SERIALIZED_NAME_SERVICE_NOW_AUTH_PARAMS = "serviceNowAuthParams";
  @SerializedName(SERIALIZED_NAME_SERVICE_NOW_AUTH_PARAMS)
  private ServiceNowAuthParamsDTO serviceNowAuthParams;

  public static final String SERIALIZED_NAME_JDBC_AUTH_PARAMS = "jdbcAuthParams";
  @SerializedName(SERIALIZED_NAME_JDBC_AUTH_PARAMS)
  private JdbcAuthParamsDTO jdbcAuthParams;

  public static final String SERIALIZED_NAME_S3_AUTH_PARAMS = "s3AuthParams";
  @SerializedName(SERIALIZED_NAME_S3_AUTH_PARAMS)
  private BasicS3AuthParamsDTO s3AuthParams;

  public static final String SERIALIZED_NAME_INTERNAL_S3_AUTH_PARAMS = "internalS3AuthParams";
  @SerializedName(SERIALIZED_NAME_INTERNAL_S3_AUTH_PARAMS)
  private InternalS3AuthParamsDTO internalS3AuthParams;

  public static final String SERIALIZED_NAME_COPY_S3_AUTH_PARAMS = "copyS3AuthParams";
  @SerializedName(SERIALIZED_NAME_COPY_S3_AUTH_PARAMS)
  private CopyS3AuthParamsDTO copyS3AuthParams;

  public static final String SERIALIZED_NAME_REDSHIFT_AUTH_PARAMS = "redshiftAuthParams";
  @SerializedName(SERIALIZED_NAME_REDSHIFT_AUTH_PARAMS)
  private RedshiftAuthParamsDTO redshiftAuthParams;

  public static final String SERIALIZED_NAME_SNOWFLAKE_AUTH_PARAMS = "snowflakeAuthParams";
  @SerializedName(SERIALIZED_NAME_SNOWFLAKE_AUTH_PARAMS)
  private SnowflakeAuthParamsDTO snowflakeAuthParams;

  public static final String SERIALIZED_NAME_BIG_QUERY_AUTH_PARAMS = "bigQueryAuthParams";
  @SerializedName(SERIALIZED_NAME_BIG_QUERY_AUTH_PARAMS)
  private BigQueryAuthParamsDTO bigQueryAuthParams;

  public static final String SERIALIZED_NAME_SQL_SERVER_AUTH_PARAMS = "sqlServerAuthParams";
  @SerializedName(SERIALIZED_NAME_SQL_SERVER_AUTH_PARAMS)
  private SqlServerAuthParamsDTO sqlServerAuthParams;

  public static final String SERIALIZED_NAME_DIMENSIONS_AUTH_PARAMS = "dimensionsAuthParams";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS_AUTH_PARAMS)
  private DimensionsAuthParamsDTO dimensionsAuthParams;

  public static final String SERIALIZED_NAME_WILLOW_AUTH_PARAMS = "willowAuthParams";
  @SerializedName(SERIALIZED_NAME_WILLOW_AUTH_PARAMS)
  private WillowAuthParamsDTO willowAuthParams;

  public static final String SERIALIZED_NAME_EMPTY_AUTH_PARAMS = "emptyAuthParams";
  @SerializedName(SERIALIZED_NAME_EMPTY_AUTH_PARAMS)
  private Object emptyAuthParams;

  public static final String SERIALIZED_NAME_SUCCESS_FACTORS_AUTH_PARAMS = "successFactorsAuthParams";
  @SerializedName(SERIALIZED_NAME_SUCCESS_FACTORS_AUTH_PARAMS)
  private SuccessFactorsAuthParamsDTO successFactorsAuthParams;

  public static final String SERIALIZED_NAME_FUSION_AUTH_PARAMS = "fusionAuthParams";
  @SerializedName(SERIALIZED_NAME_FUSION_AUTH_PARAMS)
  private FusionAuthParamsDTO fusionAuthParams;

  public static final String SERIALIZED_NAME_ADP_AUTH_PARAMS = "adpAuthParams";
  @SerializedName(SERIALIZED_NAME_ADP_AUTH_PARAMS)
  private AdpAuthParamsDTO adpAuthParams;

  public static final String SERIALIZED_NAME_MEDALLIA_AUTH_PARAMS = "medalliaAuthParams";
  @SerializedName(SERIALIZED_NAME_MEDALLIA_AUTH_PARAMS)
  private MedalliaAuthParamsDTO medalliaAuthParams;

  public static final String SERIALIZED_NAME_SALESFORCE_V2_AUTH_PARAMS = "salesforceV2AuthParams";
  @SerializedName(SERIALIZED_NAME_SALESFORCE_V2_AUTH_PARAMS)
  private SalesforceV2AuthParamsDTO salesforceV2AuthParams;

  public static final String SERIALIZED_NAME_GONG_AUTH_PARAMS = "gongAuthParams";
  @SerializedName(SERIALIZED_NAME_GONG_AUTH_PARAMS)
  private GongAuthParamsDTO gongAuthParams;

  public static final String SERIALIZED_NAME_ZOOM_AUTH_PARAMS = "zoomAuthParams";
  @SerializedName(SERIALIZED_NAME_ZOOM_AUTH_PARAMS)
  private ZoomAuthParamsDTO zoomAuthParams;

  public static final String SERIALIZED_NAME_DAYFORCE_V2_AUTH_PARAMS = "dayforceV2AuthParams";
  @SerializedName(SERIALIZED_NAME_DAYFORCE_V2_AUTH_PARAMS)
  private DayforceV2AuthParamsDTO dayforceV2AuthParams;

  public static final String SERIALIZED_NAME_SLACK_AUTH_PARAMS = "slackAuthParams";
  @SerializedName(SERIALIZED_NAME_SLACK_AUTH_PARAMS)
  private SlackAuthParamsDTO slackAuthParams;

  public static final String SERIALIZED_NAME_MY_SQL_AUTH_PARAMS = "mySqlAuthParams";
  @SerializedName(SERIALIZED_NAME_MY_SQL_AUTH_PARAMS)
  private MySqlAuthParamsDTO mySqlAuthParams;

  public static final String SERIALIZED_NAME_WORKDAY_RAAS_AUTH_PARAMS = "workdayRaasAuthParams";
  @SerializedName(SERIALIZED_NAME_WORKDAY_RAAS_AUTH_PARAMS)
  private WorkdayRaasAuthParamsDTO workdayRaasAuthParams;

  public static final String SERIALIZED_NAME_MS365_AUTH_PARAMS = "ms365AuthParams";
  @SerializedName(SERIALIZED_NAME_MS365_AUTH_PARAMS)
  private Microsoft365AuthParamsDTO ms365AuthParams;

  public static final String SERIALIZED_NAME_GOOGLE_WORKSPACE_AUTH_PARAMS = "googleWorkspaceAuthParams";
  @SerializedName(SERIALIZED_NAME_GOOGLE_WORKSPACE_AUTH_PARAMS)
  private GoogleWorkspaceAuthParamsDTO googleWorkspaceAuthParams;

  public static final String SERIALIZED_NAME_ORACLE_DB_AUTH_PARAMS = "oracleDbAuthParams";
  @SerializedName(SERIALIZED_NAME_ORACLE_DB_AUTH_PARAMS)
  private OracleDbAuthParamsDTO oracleDbAuthParams;

  public static final String SERIALIZED_NAME_HAS_UPDATES = "hasUpdates";
  @SerializedName(SERIALIZED_NAME_HAS_UPDATES)
  private Boolean hasUpdates;

  /**
   * Gets or Sets authContext
   */
  @JsonAdapter(AuthContextEnum.Adapter.class)
 public enum AuthContextEnum {
    DEFAULTDATAEXTRACTION("DefaultDataExtraction"),
    
    WORKPLACEDYNAMICSDATAEXTRACTION("WorkplaceDynamicsDataExtraction"),
    
    NOTIFICATION("Notification");

    private String value;

    AuthContextEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthContextEnum fromValue(String value) {
      for (AuthContextEnum b : AuthContextEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AuthContextEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthContextEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthContextEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AuthContextEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_AUTH_CONTEXT = "authContext";
  @SerializedName(SERIALIZED_NAME_AUTH_CONTEXT)
  private AuthContextEnum authContext;

  public DataProviderAuthParamsDTO() {
  }

  public DataProviderAuthParamsDTO tenantDomainName(String tenantDomainName) {
    
    
    
    
    this.tenantDomainName = tenantDomainName;
    return this;
  }

   /**
   * Get tenantDomainName
   * @return tenantDomainName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTenantDomainName() {
    return tenantDomainName;
  }


  public void setTenantDomainName(String tenantDomainName) {
    
    
    
    this.tenantDomainName = tenantDomainName;
  }


  public DataProviderAuthParamsDTO provider(ProviderEnum provider) {
    
    
    
    
    this.provider = provider;
    return this;
  }

   /**
   * The data provider associated with the credential.  - Valid values: UKG, Dimensions, Workday, Redshift, BasicS3, CopyS3, SqlServer, Snowflake
   * @return provider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The data provider associated with the credential.  - Valid values: UKG, Dimensions, Workday, Redshift, BasicS3, CopyS3, SqlServer, Snowflake")

  public ProviderEnum getProvider() {
    return provider;
  }


  public void setProvider(ProviderEnum provider) {
    
    
    
    this.provider = provider;
  }


  public DataProviderAuthParamsDTO bambooAuthParams(BambooAuthParamsDTO bambooAuthParams) {
    
    
    
    
    this.bambooAuthParams = bambooAuthParams;
    return this;
  }

   /**
   * Get bambooAuthParams
   * @return bambooAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BambooAuthParamsDTO getBambooAuthParams() {
    return bambooAuthParams;
  }


  public void setBambooAuthParams(BambooAuthParamsDTO bambooAuthParams) {
    
    
    
    this.bambooAuthParams = bambooAuthParams;
  }


  public DataProviderAuthParamsDTO greenhouseAuthParams(GreenhouseAuthParamsDTO greenhouseAuthParams) {
    
    
    
    
    this.greenhouseAuthParams = greenhouseAuthParams;
    return this;
  }

   /**
   * Get greenhouseAuthParams
   * @return greenhouseAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GreenhouseAuthParamsDTO getGreenhouseAuthParams() {
    return greenhouseAuthParams;
  }


  public void setGreenhouseAuthParams(GreenhouseAuthParamsDTO greenhouseAuthParams) {
    
    
    
    this.greenhouseAuthParams = greenhouseAuthParams;
  }


  public DataProviderAuthParamsDTO googleSheetsAuthParams(GoogleSheetsAuthParamsDTO googleSheetsAuthParams) {
    
    
    
    
    this.googleSheetsAuthParams = googleSheetsAuthParams;
    return this;
  }

   /**
   * Get googleSheetsAuthParams
   * @return googleSheetsAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GoogleSheetsAuthParamsDTO getGoogleSheetsAuthParams() {
    return googleSheetsAuthParams;
  }


  public void setGoogleSheetsAuthParams(GoogleSheetsAuthParamsDTO googleSheetsAuthParams) {
    
    
    
    this.googleSheetsAuthParams = googleSheetsAuthParams;
  }


  public DataProviderAuthParamsDTO jiraAuthParams(JiraAuthParamsDTO jiraAuthParams) {
    
    
    
    
    this.jiraAuthParams = jiraAuthParams;
    return this;
  }

   /**
   * Get jiraAuthParams
   * @return jiraAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JiraAuthParamsDTO getJiraAuthParams() {
    return jiraAuthParams;
  }


  public void setJiraAuthParams(JiraAuthParamsDTO jiraAuthParams) {
    
    
    
    this.jiraAuthParams = jiraAuthParams;
  }


  public DataProviderAuthParamsDTO leverAuthParams(LeverAuthParamsDTO leverAuthParams) {
    
    
    
    
    this.leverAuthParams = leverAuthParams;
    return this;
  }

   /**
   * Get leverAuthParams
   * @return leverAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LeverAuthParamsDTO getLeverAuthParams() {
    return leverAuthParams;
  }


  public void setLeverAuthParams(LeverAuthParamsDTO leverAuthParams) {
    
    
    
    this.leverAuthParams = leverAuthParams;
  }


  public DataProviderAuthParamsDTO namelyAuthParams(NamelyAuthParamsDTO namelyAuthParams) {
    
    
    
    
    this.namelyAuthParams = namelyAuthParams;
    return this;
  }

   /**
   * Get namelyAuthParams
   * @return namelyAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NamelyAuthParamsDTO getNamelyAuthParams() {
    return namelyAuthParams;
  }


  public void setNamelyAuthParams(NamelyAuthParamsDTO namelyAuthParams) {
    
    
    
    this.namelyAuthParams = namelyAuthParams;
  }


  public DataProviderAuthParamsDTO qualtricsAuthParams(QualtricsAuthParamsDTO qualtricsAuthParams) {
    
    
    
    
    this.qualtricsAuthParams = qualtricsAuthParams;
    return this;
  }

   /**
   * Get qualtricsAuthParams
   * @return qualtricsAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public QualtricsAuthParamsDTO getQualtricsAuthParams() {
    return qualtricsAuthParams;
  }


  public void setQualtricsAuthParams(QualtricsAuthParamsDTO qualtricsAuthParams) {
    
    
    
    this.qualtricsAuthParams = qualtricsAuthParams;
  }


  public DataProviderAuthParamsDTO salesforceAuthParams(SalesforceAuthParamsDTO salesforceAuthParams) {
    
    
    
    
    this.salesforceAuthParams = salesforceAuthParams;
    return this;
  }

   /**
   * Get salesforceAuthParams
   * @return salesforceAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SalesforceAuthParamsDTO getSalesforceAuthParams() {
    return salesforceAuthParams;
  }


  public void setSalesforceAuthParams(SalesforceAuthParamsDTO salesforceAuthParams) {
    
    
    
    this.salesforceAuthParams = salesforceAuthParams;
  }


  public DataProviderAuthParamsDTO ultimateAuthParams(UltimateAuthParamsDTO ultimateAuthParams) {
    
    
    
    
    this.ultimateAuthParams = ultimateAuthParams;
    return this;
  }

   /**
   * Get ultimateAuthParams
   * @return ultimateAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UltimateAuthParamsDTO getUltimateAuthParams() {
    return ultimateAuthParams;
  }


  public void setUltimateAuthParams(UltimateAuthParamsDTO ultimateAuthParams) {
    
    
    
    this.ultimateAuthParams = ultimateAuthParams;
  }


  public DataProviderAuthParamsDTO workdayAuthParams(WorkdayAuthParamsDTO workdayAuthParams) {
    
    
    
    
    this.workdayAuthParams = workdayAuthParams;
    return this;
  }

   /**
   * Get workdayAuthParams
   * @return workdayAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkdayAuthParamsDTO getWorkdayAuthParams() {
    return workdayAuthParams;
  }


  public void setWorkdayAuthParams(WorkdayAuthParamsDTO workdayAuthParams) {
    
    
    
    this.workdayAuthParams = workdayAuthParams;
  }


  public DataProviderAuthParamsDTO icimsAuthParams(IcimsAuthParamsDTO icimsAuthParams) {
    
    
    
    
    this.icimsAuthParams = icimsAuthParams;
    return this;
  }

   /**
   * Get icimsAuthParams
   * @return icimsAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IcimsAuthParamsDTO getIcimsAuthParams() {
    return icimsAuthParams;
  }


  public void setIcimsAuthParams(IcimsAuthParamsDTO icimsAuthParams) {
    
    
    
    this.icimsAuthParams = icimsAuthParams;
  }


  public DataProviderAuthParamsDTO serviceNowAuthParams(ServiceNowAuthParamsDTO serviceNowAuthParams) {
    
    
    
    
    this.serviceNowAuthParams = serviceNowAuthParams;
    return this;
  }

   /**
   * Get serviceNowAuthParams
   * @return serviceNowAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ServiceNowAuthParamsDTO getServiceNowAuthParams() {
    return serviceNowAuthParams;
  }


  public void setServiceNowAuthParams(ServiceNowAuthParamsDTO serviceNowAuthParams) {
    
    
    
    this.serviceNowAuthParams = serviceNowAuthParams;
  }


  public DataProviderAuthParamsDTO jdbcAuthParams(JdbcAuthParamsDTO jdbcAuthParams) {
    
    
    
    
    this.jdbcAuthParams = jdbcAuthParams;
    return this;
  }

   /**
   * Get jdbcAuthParams
   * @return jdbcAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JdbcAuthParamsDTO getJdbcAuthParams() {
    return jdbcAuthParams;
  }


  public void setJdbcAuthParams(JdbcAuthParamsDTO jdbcAuthParams) {
    
    
    
    this.jdbcAuthParams = jdbcAuthParams;
  }


  public DataProviderAuthParamsDTO s3AuthParams(BasicS3AuthParamsDTO s3AuthParams) {
    
    
    
    
    this.s3AuthParams = s3AuthParams;
    return this;
  }

   /**
   * Get s3AuthParams
   * @return s3AuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BasicS3AuthParamsDTO getS3AuthParams() {
    return s3AuthParams;
  }


  public void setS3AuthParams(BasicS3AuthParamsDTO s3AuthParams) {
    
    
    
    this.s3AuthParams = s3AuthParams;
  }


  public DataProviderAuthParamsDTO internalS3AuthParams(InternalS3AuthParamsDTO internalS3AuthParams) {
    
    
    
    
    this.internalS3AuthParams = internalS3AuthParams;
    return this;
  }

   /**
   * Get internalS3AuthParams
   * @return internalS3AuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InternalS3AuthParamsDTO getInternalS3AuthParams() {
    return internalS3AuthParams;
  }


  public void setInternalS3AuthParams(InternalS3AuthParamsDTO internalS3AuthParams) {
    
    
    
    this.internalS3AuthParams = internalS3AuthParams;
  }


  public DataProviderAuthParamsDTO copyS3AuthParams(CopyS3AuthParamsDTO copyS3AuthParams) {
    
    
    
    
    this.copyS3AuthParams = copyS3AuthParams;
    return this;
  }

   /**
   * Get copyS3AuthParams
   * @return copyS3AuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CopyS3AuthParamsDTO getCopyS3AuthParams() {
    return copyS3AuthParams;
  }


  public void setCopyS3AuthParams(CopyS3AuthParamsDTO copyS3AuthParams) {
    
    
    
    this.copyS3AuthParams = copyS3AuthParams;
  }


  public DataProviderAuthParamsDTO redshiftAuthParams(RedshiftAuthParamsDTO redshiftAuthParams) {
    
    
    
    
    this.redshiftAuthParams = redshiftAuthParams;
    return this;
  }

   /**
   * Get redshiftAuthParams
   * @return redshiftAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RedshiftAuthParamsDTO getRedshiftAuthParams() {
    return redshiftAuthParams;
  }


  public void setRedshiftAuthParams(RedshiftAuthParamsDTO redshiftAuthParams) {
    
    
    
    this.redshiftAuthParams = redshiftAuthParams;
  }


  public DataProviderAuthParamsDTO snowflakeAuthParams(SnowflakeAuthParamsDTO snowflakeAuthParams) {
    
    
    
    
    this.snowflakeAuthParams = snowflakeAuthParams;
    return this;
  }

   /**
   * Get snowflakeAuthParams
   * @return snowflakeAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SnowflakeAuthParamsDTO getSnowflakeAuthParams() {
    return snowflakeAuthParams;
  }


  public void setSnowflakeAuthParams(SnowflakeAuthParamsDTO snowflakeAuthParams) {
    
    
    
    this.snowflakeAuthParams = snowflakeAuthParams;
  }


  public DataProviderAuthParamsDTO bigQueryAuthParams(BigQueryAuthParamsDTO bigQueryAuthParams) {
    
    
    
    
    this.bigQueryAuthParams = bigQueryAuthParams;
    return this;
  }

   /**
   * Get bigQueryAuthParams
   * @return bigQueryAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigQueryAuthParamsDTO getBigQueryAuthParams() {
    return bigQueryAuthParams;
  }


  public void setBigQueryAuthParams(BigQueryAuthParamsDTO bigQueryAuthParams) {
    
    
    
    this.bigQueryAuthParams = bigQueryAuthParams;
  }


  public DataProviderAuthParamsDTO sqlServerAuthParams(SqlServerAuthParamsDTO sqlServerAuthParams) {
    
    
    
    
    this.sqlServerAuthParams = sqlServerAuthParams;
    return this;
  }

   /**
   * Get sqlServerAuthParams
   * @return sqlServerAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SqlServerAuthParamsDTO getSqlServerAuthParams() {
    return sqlServerAuthParams;
  }


  public void setSqlServerAuthParams(SqlServerAuthParamsDTO sqlServerAuthParams) {
    
    
    
    this.sqlServerAuthParams = sqlServerAuthParams;
  }


  public DataProviderAuthParamsDTO dimensionsAuthParams(DimensionsAuthParamsDTO dimensionsAuthParams) {
    
    
    
    
    this.dimensionsAuthParams = dimensionsAuthParams;
    return this;
  }

   /**
   * Get dimensionsAuthParams
   * @return dimensionsAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DimensionsAuthParamsDTO getDimensionsAuthParams() {
    return dimensionsAuthParams;
  }


  public void setDimensionsAuthParams(DimensionsAuthParamsDTO dimensionsAuthParams) {
    
    
    
    this.dimensionsAuthParams = dimensionsAuthParams;
  }


  public DataProviderAuthParamsDTO willowAuthParams(WillowAuthParamsDTO willowAuthParams) {
    
    
    
    
    this.willowAuthParams = willowAuthParams;
    return this;
  }

   /**
   * Get willowAuthParams
   * @return willowAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WillowAuthParamsDTO getWillowAuthParams() {
    return willowAuthParams;
  }


  public void setWillowAuthParams(WillowAuthParamsDTO willowAuthParams) {
    
    
    
    this.willowAuthParams = willowAuthParams;
  }


  public DataProviderAuthParamsDTO emptyAuthParams(Object emptyAuthParams) {
    
    
    
    
    this.emptyAuthParams = emptyAuthParams;
    return this;
  }

   /**
   * Get emptyAuthParams
   * @return emptyAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getEmptyAuthParams() {
    return emptyAuthParams;
  }


  public void setEmptyAuthParams(Object emptyAuthParams) {
    
    
    
    this.emptyAuthParams = emptyAuthParams;
  }


  public DataProviderAuthParamsDTO successFactorsAuthParams(SuccessFactorsAuthParamsDTO successFactorsAuthParams) {
    
    
    
    
    this.successFactorsAuthParams = successFactorsAuthParams;
    return this;
  }

   /**
   * Get successFactorsAuthParams
   * @return successFactorsAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SuccessFactorsAuthParamsDTO getSuccessFactorsAuthParams() {
    return successFactorsAuthParams;
  }


  public void setSuccessFactorsAuthParams(SuccessFactorsAuthParamsDTO successFactorsAuthParams) {
    
    
    
    this.successFactorsAuthParams = successFactorsAuthParams;
  }


  public DataProviderAuthParamsDTO fusionAuthParams(FusionAuthParamsDTO fusionAuthParams) {
    
    
    
    
    this.fusionAuthParams = fusionAuthParams;
    return this;
  }

   /**
   * Get fusionAuthParams
   * @return fusionAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FusionAuthParamsDTO getFusionAuthParams() {
    return fusionAuthParams;
  }


  public void setFusionAuthParams(FusionAuthParamsDTO fusionAuthParams) {
    
    
    
    this.fusionAuthParams = fusionAuthParams;
  }


  public DataProviderAuthParamsDTO adpAuthParams(AdpAuthParamsDTO adpAuthParams) {
    
    
    
    
    this.adpAuthParams = adpAuthParams;
    return this;
  }

   /**
   * Get adpAuthParams
   * @return adpAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdpAuthParamsDTO getAdpAuthParams() {
    return adpAuthParams;
  }


  public void setAdpAuthParams(AdpAuthParamsDTO adpAuthParams) {
    
    
    
    this.adpAuthParams = adpAuthParams;
  }


  public DataProviderAuthParamsDTO medalliaAuthParams(MedalliaAuthParamsDTO medalliaAuthParams) {
    
    
    
    
    this.medalliaAuthParams = medalliaAuthParams;
    return this;
  }

   /**
   * Get medalliaAuthParams
   * @return medalliaAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MedalliaAuthParamsDTO getMedalliaAuthParams() {
    return medalliaAuthParams;
  }


  public void setMedalliaAuthParams(MedalliaAuthParamsDTO medalliaAuthParams) {
    
    
    
    this.medalliaAuthParams = medalliaAuthParams;
  }


  public DataProviderAuthParamsDTO salesforceV2AuthParams(SalesforceV2AuthParamsDTO salesforceV2AuthParams) {
    
    
    
    
    this.salesforceV2AuthParams = salesforceV2AuthParams;
    return this;
  }

   /**
   * Get salesforceV2AuthParams
   * @return salesforceV2AuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SalesforceV2AuthParamsDTO getSalesforceV2AuthParams() {
    return salesforceV2AuthParams;
  }


  public void setSalesforceV2AuthParams(SalesforceV2AuthParamsDTO salesforceV2AuthParams) {
    
    
    
    this.salesforceV2AuthParams = salesforceV2AuthParams;
  }


  public DataProviderAuthParamsDTO gongAuthParams(GongAuthParamsDTO gongAuthParams) {
    
    
    
    
    this.gongAuthParams = gongAuthParams;
    return this;
  }

   /**
   * Get gongAuthParams
   * @return gongAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GongAuthParamsDTO getGongAuthParams() {
    return gongAuthParams;
  }


  public void setGongAuthParams(GongAuthParamsDTO gongAuthParams) {
    
    
    
    this.gongAuthParams = gongAuthParams;
  }


  public DataProviderAuthParamsDTO zoomAuthParams(ZoomAuthParamsDTO zoomAuthParams) {
    
    
    
    
    this.zoomAuthParams = zoomAuthParams;
    return this;
  }

   /**
   * Get zoomAuthParams
   * @return zoomAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ZoomAuthParamsDTO getZoomAuthParams() {
    return zoomAuthParams;
  }


  public void setZoomAuthParams(ZoomAuthParamsDTO zoomAuthParams) {
    
    
    
    this.zoomAuthParams = zoomAuthParams;
  }


  public DataProviderAuthParamsDTO dayforceV2AuthParams(DayforceV2AuthParamsDTO dayforceV2AuthParams) {
    
    
    
    
    this.dayforceV2AuthParams = dayforceV2AuthParams;
    return this;
  }

   /**
   * Get dayforceV2AuthParams
   * @return dayforceV2AuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DayforceV2AuthParamsDTO getDayforceV2AuthParams() {
    return dayforceV2AuthParams;
  }


  public void setDayforceV2AuthParams(DayforceV2AuthParamsDTO dayforceV2AuthParams) {
    
    
    
    this.dayforceV2AuthParams = dayforceV2AuthParams;
  }


  public DataProviderAuthParamsDTO slackAuthParams(SlackAuthParamsDTO slackAuthParams) {
    
    
    
    
    this.slackAuthParams = slackAuthParams;
    return this;
  }

   /**
   * Get slackAuthParams
   * @return slackAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SlackAuthParamsDTO getSlackAuthParams() {
    return slackAuthParams;
  }


  public void setSlackAuthParams(SlackAuthParamsDTO slackAuthParams) {
    
    
    
    this.slackAuthParams = slackAuthParams;
  }


  public DataProviderAuthParamsDTO mySqlAuthParams(MySqlAuthParamsDTO mySqlAuthParams) {
    
    
    
    
    this.mySqlAuthParams = mySqlAuthParams;
    return this;
  }

   /**
   * Get mySqlAuthParams
   * @return mySqlAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MySqlAuthParamsDTO getMySqlAuthParams() {
    return mySqlAuthParams;
  }


  public void setMySqlAuthParams(MySqlAuthParamsDTO mySqlAuthParams) {
    
    
    
    this.mySqlAuthParams = mySqlAuthParams;
  }


  public DataProviderAuthParamsDTO workdayRaasAuthParams(WorkdayRaasAuthParamsDTO workdayRaasAuthParams) {
    
    
    
    
    this.workdayRaasAuthParams = workdayRaasAuthParams;
    return this;
  }

   /**
   * Get workdayRaasAuthParams
   * @return workdayRaasAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkdayRaasAuthParamsDTO getWorkdayRaasAuthParams() {
    return workdayRaasAuthParams;
  }


  public void setWorkdayRaasAuthParams(WorkdayRaasAuthParamsDTO workdayRaasAuthParams) {
    
    
    
    this.workdayRaasAuthParams = workdayRaasAuthParams;
  }


  public DataProviderAuthParamsDTO ms365AuthParams(Microsoft365AuthParamsDTO ms365AuthParams) {
    
    
    
    
    this.ms365AuthParams = ms365AuthParams;
    return this;
  }

   /**
   * Get ms365AuthParams
   * @return ms365AuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Microsoft365AuthParamsDTO getMs365AuthParams() {
    return ms365AuthParams;
  }


  public void setMs365AuthParams(Microsoft365AuthParamsDTO ms365AuthParams) {
    
    
    
    this.ms365AuthParams = ms365AuthParams;
  }


  public DataProviderAuthParamsDTO googleWorkspaceAuthParams(GoogleWorkspaceAuthParamsDTO googleWorkspaceAuthParams) {
    
    
    
    
    this.googleWorkspaceAuthParams = googleWorkspaceAuthParams;
    return this;
  }

   /**
   * Get googleWorkspaceAuthParams
   * @return googleWorkspaceAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GoogleWorkspaceAuthParamsDTO getGoogleWorkspaceAuthParams() {
    return googleWorkspaceAuthParams;
  }


  public void setGoogleWorkspaceAuthParams(GoogleWorkspaceAuthParamsDTO googleWorkspaceAuthParams) {
    
    
    
    this.googleWorkspaceAuthParams = googleWorkspaceAuthParams;
  }


  public DataProviderAuthParamsDTO oracleDbAuthParams(OracleDbAuthParamsDTO oracleDbAuthParams) {
    
    
    
    
    this.oracleDbAuthParams = oracleDbAuthParams;
    return this;
  }

   /**
   * Get oracleDbAuthParams
   * @return oracleDbAuthParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OracleDbAuthParamsDTO getOracleDbAuthParams() {
    return oracleDbAuthParams;
  }


  public void setOracleDbAuthParams(OracleDbAuthParamsDTO oracleDbAuthParams) {
    
    
    
    this.oracleDbAuthParams = oracleDbAuthParams;
  }


  public DataProviderAuthParamsDTO hasUpdates(Boolean hasUpdates) {
    
    
    
    
    this.hasUpdates = hasUpdates;
    return this;
  }

   /**
   * Get hasUpdates
   * @return hasUpdates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasUpdates() {
    return hasUpdates;
  }


  public void setHasUpdates(Boolean hasUpdates) {
    
    
    
    this.hasUpdates = hasUpdates;
  }


  public DataProviderAuthParamsDTO authContext(AuthContextEnum authContext) {
    
    
    
    
    this.authContext = authContext;
    return this;
  }

   /**
   * Get authContext
   * @return authContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AuthContextEnum getAuthContext() {
    return authContext;
  }


  public void setAuthContext(AuthContextEnum authContext) {
    
    
    
    this.authContext = authContext;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the DataProviderAuthParamsDTO instance itself
   */
  public DataProviderAuthParamsDTO putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataProviderAuthParamsDTO dataProviderAuthParamsDTO = (DataProviderAuthParamsDTO) o;
    return Objects.equals(this.tenantDomainName, dataProviderAuthParamsDTO.tenantDomainName) &&
        Objects.equals(this.provider, dataProviderAuthParamsDTO.provider) &&
        Objects.equals(this.bambooAuthParams, dataProviderAuthParamsDTO.bambooAuthParams) &&
        Objects.equals(this.greenhouseAuthParams, dataProviderAuthParamsDTO.greenhouseAuthParams) &&
        Objects.equals(this.googleSheetsAuthParams, dataProviderAuthParamsDTO.googleSheetsAuthParams) &&
        Objects.equals(this.jiraAuthParams, dataProviderAuthParamsDTO.jiraAuthParams) &&
        Objects.equals(this.leverAuthParams, dataProviderAuthParamsDTO.leverAuthParams) &&
        Objects.equals(this.namelyAuthParams, dataProviderAuthParamsDTO.namelyAuthParams) &&
        Objects.equals(this.qualtricsAuthParams, dataProviderAuthParamsDTO.qualtricsAuthParams) &&
        Objects.equals(this.salesforceAuthParams, dataProviderAuthParamsDTO.salesforceAuthParams) &&
        Objects.equals(this.ultimateAuthParams, dataProviderAuthParamsDTO.ultimateAuthParams) &&
        Objects.equals(this.workdayAuthParams, dataProviderAuthParamsDTO.workdayAuthParams) &&
        Objects.equals(this.icimsAuthParams, dataProviderAuthParamsDTO.icimsAuthParams) &&
        Objects.equals(this.serviceNowAuthParams, dataProviderAuthParamsDTO.serviceNowAuthParams) &&
        Objects.equals(this.jdbcAuthParams, dataProviderAuthParamsDTO.jdbcAuthParams) &&
        Objects.equals(this.s3AuthParams, dataProviderAuthParamsDTO.s3AuthParams) &&
        Objects.equals(this.internalS3AuthParams, dataProviderAuthParamsDTO.internalS3AuthParams) &&
        Objects.equals(this.copyS3AuthParams, dataProviderAuthParamsDTO.copyS3AuthParams) &&
        Objects.equals(this.redshiftAuthParams, dataProviderAuthParamsDTO.redshiftAuthParams) &&
        Objects.equals(this.snowflakeAuthParams, dataProviderAuthParamsDTO.snowflakeAuthParams) &&
        Objects.equals(this.bigQueryAuthParams, dataProviderAuthParamsDTO.bigQueryAuthParams) &&
        Objects.equals(this.sqlServerAuthParams, dataProviderAuthParamsDTO.sqlServerAuthParams) &&
        Objects.equals(this.dimensionsAuthParams, dataProviderAuthParamsDTO.dimensionsAuthParams) &&
        Objects.equals(this.willowAuthParams, dataProviderAuthParamsDTO.willowAuthParams) &&
        Objects.equals(this.emptyAuthParams, dataProviderAuthParamsDTO.emptyAuthParams) &&
        Objects.equals(this.successFactorsAuthParams, dataProviderAuthParamsDTO.successFactorsAuthParams) &&
        Objects.equals(this.fusionAuthParams, dataProviderAuthParamsDTO.fusionAuthParams) &&
        Objects.equals(this.adpAuthParams, dataProviderAuthParamsDTO.adpAuthParams) &&
        Objects.equals(this.medalliaAuthParams, dataProviderAuthParamsDTO.medalliaAuthParams) &&
        Objects.equals(this.salesforceV2AuthParams, dataProviderAuthParamsDTO.salesforceV2AuthParams) &&
        Objects.equals(this.gongAuthParams, dataProviderAuthParamsDTO.gongAuthParams) &&
        Objects.equals(this.zoomAuthParams, dataProviderAuthParamsDTO.zoomAuthParams) &&
        Objects.equals(this.dayforceV2AuthParams, dataProviderAuthParamsDTO.dayforceV2AuthParams) &&
        Objects.equals(this.slackAuthParams, dataProviderAuthParamsDTO.slackAuthParams) &&
        Objects.equals(this.mySqlAuthParams, dataProviderAuthParamsDTO.mySqlAuthParams) &&
        Objects.equals(this.workdayRaasAuthParams, dataProviderAuthParamsDTO.workdayRaasAuthParams) &&
        Objects.equals(this.ms365AuthParams, dataProviderAuthParamsDTO.ms365AuthParams) &&
        Objects.equals(this.googleWorkspaceAuthParams, dataProviderAuthParamsDTO.googleWorkspaceAuthParams) &&
        Objects.equals(this.oracleDbAuthParams, dataProviderAuthParamsDTO.oracleDbAuthParams) &&
        Objects.equals(this.hasUpdates, dataProviderAuthParamsDTO.hasUpdates) &&
        Objects.equals(this.authContext, dataProviderAuthParamsDTO.authContext)&&
        Objects.equals(this.additionalProperties, dataProviderAuthParamsDTO.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenantDomainName, provider, bambooAuthParams, greenhouseAuthParams, googleSheetsAuthParams, jiraAuthParams, leverAuthParams, namelyAuthParams, qualtricsAuthParams, salesforceAuthParams, ultimateAuthParams, workdayAuthParams, icimsAuthParams, serviceNowAuthParams, jdbcAuthParams, s3AuthParams, internalS3AuthParams, copyS3AuthParams, redshiftAuthParams, snowflakeAuthParams, bigQueryAuthParams, sqlServerAuthParams, dimensionsAuthParams, willowAuthParams, emptyAuthParams, successFactorsAuthParams, fusionAuthParams, adpAuthParams, medalliaAuthParams, salesforceV2AuthParams, gongAuthParams, zoomAuthParams, dayforceV2AuthParams, slackAuthParams, mySqlAuthParams, workdayRaasAuthParams, ms365AuthParams, googleWorkspaceAuthParams, oracleDbAuthParams, hasUpdates, authContext, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataProviderAuthParamsDTO {\n");
    sb.append("    tenantDomainName: ").append(toIndentedString(tenantDomainName)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    bambooAuthParams: ").append(toIndentedString(bambooAuthParams)).append("\n");
    sb.append("    greenhouseAuthParams: ").append(toIndentedString(greenhouseAuthParams)).append("\n");
    sb.append("    googleSheetsAuthParams: ").append(toIndentedString(googleSheetsAuthParams)).append("\n");
    sb.append("    jiraAuthParams: ").append(toIndentedString(jiraAuthParams)).append("\n");
    sb.append("    leverAuthParams: ").append(toIndentedString(leverAuthParams)).append("\n");
    sb.append("    namelyAuthParams: ").append(toIndentedString(namelyAuthParams)).append("\n");
    sb.append("    qualtricsAuthParams: ").append(toIndentedString(qualtricsAuthParams)).append("\n");
    sb.append("    salesforceAuthParams: ").append(toIndentedString(salesforceAuthParams)).append("\n");
    sb.append("    ultimateAuthParams: ").append(toIndentedString(ultimateAuthParams)).append("\n");
    sb.append("    workdayAuthParams: ").append(toIndentedString(workdayAuthParams)).append("\n");
    sb.append("    icimsAuthParams: ").append(toIndentedString(icimsAuthParams)).append("\n");
    sb.append("    serviceNowAuthParams: ").append(toIndentedString(serviceNowAuthParams)).append("\n");
    sb.append("    jdbcAuthParams: ").append(toIndentedString(jdbcAuthParams)).append("\n");
    sb.append("    s3AuthParams: ").append(toIndentedString(s3AuthParams)).append("\n");
    sb.append("    internalS3AuthParams: ").append(toIndentedString(internalS3AuthParams)).append("\n");
    sb.append("    copyS3AuthParams: ").append(toIndentedString(copyS3AuthParams)).append("\n");
    sb.append("    redshiftAuthParams: ").append(toIndentedString(redshiftAuthParams)).append("\n");
    sb.append("    snowflakeAuthParams: ").append(toIndentedString(snowflakeAuthParams)).append("\n");
    sb.append("    bigQueryAuthParams: ").append(toIndentedString(bigQueryAuthParams)).append("\n");
    sb.append("    sqlServerAuthParams: ").append(toIndentedString(sqlServerAuthParams)).append("\n");
    sb.append("    dimensionsAuthParams: ").append(toIndentedString(dimensionsAuthParams)).append("\n");
    sb.append("    willowAuthParams: ").append(toIndentedString(willowAuthParams)).append("\n");
    sb.append("    emptyAuthParams: ").append(toIndentedString(emptyAuthParams)).append("\n");
    sb.append("    successFactorsAuthParams: ").append(toIndentedString(successFactorsAuthParams)).append("\n");
    sb.append("    fusionAuthParams: ").append(toIndentedString(fusionAuthParams)).append("\n");
    sb.append("    adpAuthParams: ").append(toIndentedString(adpAuthParams)).append("\n");
    sb.append("    medalliaAuthParams: ").append(toIndentedString(medalliaAuthParams)).append("\n");
    sb.append("    salesforceV2AuthParams: ").append(toIndentedString(salesforceV2AuthParams)).append("\n");
    sb.append("    gongAuthParams: ").append(toIndentedString(gongAuthParams)).append("\n");
    sb.append("    zoomAuthParams: ").append(toIndentedString(zoomAuthParams)).append("\n");
    sb.append("    dayforceV2AuthParams: ").append(toIndentedString(dayforceV2AuthParams)).append("\n");
    sb.append("    slackAuthParams: ").append(toIndentedString(slackAuthParams)).append("\n");
    sb.append("    mySqlAuthParams: ").append(toIndentedString(mySqlAuthParams)).append("\n");
    sb.append("    workdayRaasAuthParams: ").append(toIndentedString(workdayRaasAuthParams)).append("\n");
    sb.append("    ms365AuthParams: ").append(toIndentedString(ms365AuthParams)).append("\n");
    sb.append("    googleWorkspaceAuthParams: ").append(toIndentedString(googleWorkspaceAuthParams)).append("\n");
    sb.append("    oracleDbAuthParams: ").append(toIndentedString(oracleDbAuthParams)).append("\n");
    sb.append("    hasUpdates: ").append(toIndentedString(hasUpdates)).append("\n");
    sb.append("    authContext: ").append(toIndentedString(authContext)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tenantDomainName");
    openapiFields.add("provider");
    openapiFields.add("bambooAuthParams");
    openapiFields.add("greenhouseAuthParams");
    openapiFields.add("googleSheetsAuthParams");
    openapiFields.add("jiraAuthParams");
    openapiFields.add("leverAuthParams");
    openapiFields.add("namelyAuthParams");
    openapiFields.add("qualtricsAuthParams");
    openapiFields.add("salesforceAuthParams");
    openapiFields.add("ultimateAuthParams");
    openapiFields.add("workdayAuthParams");
    openapiFields.add("icimsAuthParams");
    openapiFields.add("serviceNowAuthParams");
    openapiFields.add("jdbcAuthParams");
    openapiFields.add("s3AuthParams");
    openapiFields.add("internalS3AuthParams");
    openapiFields.add("copyS3AuthParams");
    openapiFields.add("redshiftAuthParams");
    openapiFields.add("snowflakeAuthParams");
    openapiFields.add("bigQueryAuthParams");
    openapiFields.add("sqlServerAuthParams");
    openapiFields.add("dimensionsAuthParams");
    openapiFields.add("willowAuthParams");
    openapiFields.add("emptyAuthParams");
    openapiFields.add("successFactorsAuthParams");
    openapiFields.add("fusionAuthParams");
    openapiFields.add("adpAuthParams");
    openapiFields.add("medalliaAuthParams");
    openapiFields.add("salesforceV2AuthParams");
    openapiFields.add("gongAuthParams");
    openapiFields.add("zoomAuthParams");
    openapiFields.add("dayforceV2AuthParams");
    openapiFields.add("slackAuthParams");
    openapiFields.add("mySqlAuthParams");
    openapiFields.add("workdayRaasAuthParams");
    openapiFields.add("ms365AuthParams");
    openapiFields.add("googleWorkspaceAuthParams");
    openapiFields.add("oracleDbAuthParams");
    openapiFields.add("hasUpdates");
    openapiFields.add("authContext");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DataProviderAuthParamsDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DataProviderAuthParamsDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DataProviderAuthParamsDTO is not found in the empty JSON string", DataProviderAuthParamsDTO.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("tenantDomainName") != null && !jsonObj.get("tenantDomainName").isJsonNull()) && !jsonObj.get("tenantDomainName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantDomainName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantDomainName").toString()));
      }
      if ((jsonObj.get("provider") != null && !jsonObj.get("provider").isJsonNull()) && !jsonObj.get("provider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provider").toString()));
      }
      // validate the optional field `bambooAuthParams`
      if (jsonObj.get("bambooAuthParams") != null && !jsonObj.get("bambooAuthParams").isJsonNull()) {
        BambooAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("bambooAuthParams"));
      }
      // validate the optional field `greenhouseAuthParams`
      if (jsonObj.get("greenhouseAuthParams") != null && !jsonObj.get("greenhouseAuthParams").isJsonNull()) {
        GreenhouseAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("greenhouseAuthParams"));
      }
      // validate the optional field `googleSheetsAuthParams`
      if (jsonObj.get("googleSheetsAuthParams") != null && !jsonObj.get("googleSheetsAuthParams").isJsonNull()) {
        GoogleSheetsAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("googleSheetsAuthParams"));
      }
      // validate the optional field `jiraAuthParams`
      if (jsonObj.get("jiraAuthParams") != null && !jsonObj.get("jiraAuthParams").isJsonNull()) {
        JiraAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("jiraAuthParams"));
      }
      // validate the optional field `leverAuthParams`
      if (jsonObj.get("leverAuthParams") != null && !jsonObj.get("leverAuthParams").isJsonNull()) {
        LeverAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("leverAuthParams"));
      }
      // validate the optional field `namelyAuthParams`
      if (jsonObj.get("namelyAuthParams") != null && !jsonObj.get("namelyAuthParams").isJsonNull()) {
        NamelyAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("namelyAuthParams"));
      }
      // validate the optional field `qualtricsAuthParams`
      if (jsonObj.get("qualtricsAuthParams") != null && !jsonObj.get("qualtricsAuthParams").isJsonNull()) {
        QualtricsAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("qualtricsAuthParams"));
      }
      // validate the optional field `salesforceAuthParams`
      if (jsonObj.get("salesforceAuthParams") != null && !jsonObj.get("salesforceAuthParams").isJsonNull()) {
        SalesforceAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("salesforceAuthParams"));
      }
      // validate the optional field `ultimateAuthParams`
      if (jsonObj.get("ultimateAuthParams") != null && !jsonObj.get("ultimateAuthParams").isJsonNull()) {
        UltimateAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("ultimateAuthParams"));
      }
      // validate the optional field `workdayAuthParams`
      if (jsonObj.get("workdayAuthParams") != null && !jsonObj.get("workdayAuthParams").isJsonNull()) {
        WorkdayAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("workdayAuthParams"));
      }
      // validate the optional field `icimsAuthParams`
      if (jsonObj.get("icimsAuthParams") != null && !jsonObj.get("icimsAuthParams").isJsonNull()) {
        IcimsAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("icimsAuthParams"));
      }
      // validate the optional field `serviceNowAuthParams`
      if (jsonObj.get("serviceNowAuthParams") != null && !jsonObj.get("serviceNowAuthParams").isJsonNull()) {
        ServiceNowAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("serviceNowAuthParams"));
      }
      // validate the optional field `jdbcAuthParams`
      if (jsonObj.get("jdbcAuthParams") != null && !jsonObj.get("jdbcAuthParams").isJsonNull()) {
        JdbcAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("jdbcAuthParams"));
      }
      // validate the optional field `s3AuthParams`
      if (jsonObj.get("s3AuthParams") != null && !jsonObj.get("s3AuthParams").isJsonNull()) {
        BasicS3AuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("s3AuthParams"));
      }
      // validate the optional field `internalS3AuthParams`
      if (jsonObj.get("internalS3AuthParams") != null && !jsonObj.get("internalS3AuthParams").isJsonNull()) {
        InternalS3AuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("internalS3AuthParams"));
      }
      // validate the optional field `copyS3AuthParams`
      if (jsonObj.get("copyS3AuthParams") != null && !jsonObj.get("copyS3AuthParams").isJsonNull()) {
        CopyS3AuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("copyS3AuthParams"));
      }
      // validate the optional field `redshiftAuthParams`
      if (jsonObj.get("redshiftAuthParams") != null && !jsonObj.get("redshiftAuthParams").isJsonNull()) {
        RedshiftAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("redshiftAuthParams"));
      }
      // validate the optional field `snowflakeAuthParams`
      if (jsonObj.get("snowflakeAuthParams") != null && !jsonObj.get("snowflakeAuthParams").isJsonNull()) {
        SnowflakeAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("snowflakeAuthParams"));
      }
      // validate the optional field `bigQueryAuthParams`
      if (jsonObj.get("bigQueryAuthParams") != null && !jsonObj.get("bigQueryAuthParams").isJsonNull()) {
        BigQueryAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("bigQueryAuthParams"));
      }
      // validate the optional field `sqlServerAuthParams`
      if (jsonObj.get("sqlServerAuthParams") != null && !jsonObj.get("sqlServerAuthParams").isJsonNull()) {
        SqlServerAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("sqlServerAuthParams"));
      }
      // validate the optional field `dimensionsAuthParams`
      if (jsonObj.get("dimensionsAuthParams") != null && !jsonObj.get("dimensionsAuthParams").isJsonNull()) {
        DimensionsAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("dimensionsAuthParams"));
      }
      // validate the optional field `willowAuthParams`
      if (jsonObj.get("willowAuthParams") != null && !jsonObj.get("willowAuthParams").isJsonNull()) {
        WillowAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("willowAuthParams"));
      }
      // validate the optional field `successFactorsAuthParams`
      if (jsonObj.get("successFactorsAuthParams") != null && !jsonObj.get("successFactorsAuthParams").isJsonNull()) {
        SuccessFactorsAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("successFactorsAuthParams"));
      }
      // validate the optional field `fusionAuthParams`
      if (jsonObj.get("fusionAuthParams") != null && !jsonObj.get("fusionAuthParams").isJsonNull()) {
        FusionAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("fusionAuthParams"));
      }
      // validate the optional field `adpAuthParams`
      if (jsonObj.get("adpAuthParams") != null && !jsonObj.get("adpAuthParams").isJsonNull()) {
        AdpAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("adpAuthParams"));
      }
      // validate the optional field `medalliaAuthParams`
      if (jsonObj.get("medalliaAuthParams") != null && !jsonObj.get("medalliaAuthParams").isJsonNull()) {
        MedalliaAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("medalliaAuthParams"));
      }
      // validate the optional field `salesforceV2AuthParams`
      if (jsonObj.get("salesforceV2AuthParams") != null && !jsonObj.get("salesforceV2AuthParams").isJsonNull()) {
        SalesforceV2AuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("salesforceV2AuthParams"));
      }
      // validate the optional field `gongAuthParams`
      if (jsonObj.get("gongAuthParams") != null && !jsonObj.get("gongAuthParams").isJsonNull()) {
        GongAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("gongAuthParams"));
      }
      // validate the optional field `zoomAuthParams`
      if (jsonObj.get("zoomAuthParams") != null && !jsonObj.get("zoomAuthParams").isJsonNull()) {
        ZoomAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("zoomAuthParams"));
      }
      // validate the optional field `dayforceV2AuthParams`
      if (jsonObj.get("dayforceV2AuthParams") != null && !jsonObj.get("dayforceV2AuthParams").isJsonNull()) {
        DayforceV2AuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("dayforceV2AuthParams"));
      }
      // validate the optional field `slackAuthParams`
      if (jsonObj.get("slackAuthParams") != null && !jsonObj.get("slackAuthParams").isJsonNull()) {
        SlackAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("slackAuthParams"));
      }
      // validate the optional field `mySqlAuthParams`
      if (jsonObj.get("mySqlAuthParams") != null && !jsonObj.get("mySqlAuthParams").isJsonNull()) {
        MySqlAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("mySqlAuthParams"));
      }
      // validate the optional field `workdayRaasAuthParams`
      if (jsonObj.get("workdayRaasAuthParams") != null && !jsonObj.get("workdayRaasAuthParams").isJsonNull()) {
        WorkdayRaasAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("workdayRaasAuthParams"));
      }
      // validate the optional field `ms365AuthParams`
      if (jsonObj.get("ms365AuthParams") != null && !jsonObj.get("ms365AuthParams").isJsonNull()) {
        Microsoft365AuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("ms365AuthParams"));
      }
      // validate the optional field `googleWorkspaceAuthParams`
      if (jsonObj.get("googleWorkspaceAuthParams") != null && !jsonObj.get("googleWorkspaceAuthParams").isJsonNull()) {
        GoogleWorkspaceAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("googleWorkspaceAuthParams"));
      }
      // validate the optional field `oracleDbAuthParams`
      if (jsonObj.get("oracleDbAuthParams") != null && !jsonObj.get("oracleDbAuthParams").isJsonNull()) {
        OracleDbAuthParamsDTO.validateJsonObject(jsonObj.getAsJsonObject("oracleDbAuthParams"));
      }
      if ((jsonObj.get("authContext") != null && !jsonObj.get("authContext").isJsonNull()) && !jsonObj.get("authContext").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authContext` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authContext").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DataProviderAuthParamsDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DataProviderAuthParamsDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DataProviderAuthParamsDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DataProviderAuthParamsDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<DataProviderAuthParamsDTO>() {
           @Override
           public void write(JsonWriter out, DataProviderAuthParamsDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public DataProviderAuthParamsDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             DataProviderAuthParamsDTO instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DataProviderAuthParamsDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DataProviderAuthParamsDTO
  * @throws IOException if the JSON string is invalid with respect to DataProviderAuthParamsDTO
  */
  public static DataProviderAuthParamsDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DataProviderAuthParamsDTO.class);
  }

 /**
  * Convert an instance of DataProviderAuthParamsDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

